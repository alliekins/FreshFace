
var getQueryVariable = function (variable, query) {
    if (typeof query === "undefined") {
        query = window.location.search.substring(1);
    }
    var vars = query.split("&");
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split("=");
        if (pair[0] == variable) {
            return unescape(pair[1]);
        }
    }
};

FB.api('/me', function (apiResp) {
    var uName = apiResp.name;
    Debug.log("User name: " + uName);
    Debug.log(apiResp);

    var fb_url = "https://graph.facebook.com/";
    fb_url += apiResp.id;
    var photoUrl = fb_url + "/albums";
    photoUrl += "?access_token=" + logResp.authResponse.accessToken;
    photoUrl += "&app_id=" + "@ViewBag.AppID";
    photoUrl += "&method=post";
    photoUrl += "&sdk=joey";
    photoUrl += "&pretty=0";
    $("#photoForm").attr("action", photoUrl);
    //$("#photoForm").ajaxForm(function (photoResp) {
    //    Debug.log(photoResp);
    //});
    $(".ff-name").html(uName);
});
FB.api('/me/home', { limit: 15 }, function (apiResp) {
    var feedPar = $(".ff-feed-parent");
    Debug.log("User's feed: " + apiResp);
    $(apiResp.data).each(function (index, post) {
        FreshFace.appendPost(feedPar, post);
    });
    FreshFace.next = getQueryVariable("until", apiResp.paging.next);

    var checkForNewPosts = function () {
        Debug.log("Checking for new posts");
        var oldFirst = $(".ff-feed-item")[0];

        FB.api('/me/home', { limit: 10 }, function (newPosts) {
            var postsToAdd = [];

            $(newPosts.data).each(function (index, newPost) {
                var newPostId = "fb-item-" + newPost.id;

                // If we've hit the old first post, we're good
                if ($(oldFirst).hasClass(newPostId)) {
                    return false;
                }

                // But if this is a duplicate, just ignore it
                if ($("." + newPostId).length > 0) {
                    return true;
                }

                postsToAdd.push(FreshFace.generatePost(newPost));
            });

            for (var i = postsToAdd.length - 1; i >= 0; i--) {
                $(feedPar).prepend(postsToAdd[i]);
            }
        });


        setTimeout(checkForNewPosts, 5000);
    };

    setTimeout(checkForNewPosts, 5000);
});

@Html.Partial("_FetchEvents")

// Load more when user hits bottom of screen
$(window).scroll(function () {
    if ($(window).scrollTop() == $(document).height() - $(window).height()) {
        Debug.log("Bottom of page");
        if (typeof FreshFace.next !== "undefined") {
            Debug.log("Bottom of page, loading more content.");
            
            FB.api('/me/home', { limit: 10, until: FreshFace.next }, function (apiResp) {
                var feedPar = $(".ff-feed-parent");
                Debug.log("Next 10 posts data:");
                Debug.log(apiResp);
                $(apiResp.data).each(function (index, post) {
                    FreshFace.appendPost(feedPar, post);
                });
                FreshFace.next = getQueryVariable("until", apiResp.paging.next);
            });
        }
    }
});

