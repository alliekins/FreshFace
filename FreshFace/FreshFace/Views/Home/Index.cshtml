@{
    ViewBag.Title = @Resources.Strings.FreshFaceHome;
    Layout = "~/Views/Shared/_GridLayout.cshtml";
}

<!-- Start Row -->

<div id="friendModal" class="reveal-modal medium pagelinks">
    <p>@Resources.Strings.EnterFriend</p>
    <form id="friendForm">
        <input type="text" class="dummy hide" />
        <input type="text" id="friend" class="required" placeholder="@Resources.Strings.AddFriendPlaceHolder" />
        <a class="addFriend" href="">@Resources.Strings.AddFriend</a>
    </form>
</div>

<div id="photoModal" class="reveal-modal medium pagelinks">
     <p>@Resources.Strings.EnterPhoto</p>
     <form id="photoForm" name="photoForm">
        <input type="text" class="dummy hide" />
        <input type="text" class="photo_url" placeholder="@Resources.Strings.UploadPhotoPlaceholder" />
        <a class="addPhoto" href="">@Resources.Strings.UploadPhoto</a>
    </form> 
</div>

<div id="stockModal" class="reveal-modal medium pagelinks">
     <p>@Resources.Strings.EnterStock</p>
    <form id="stockForm">
        <input type="text" id="symbol" class="required" placeholder="@Resources.Strings.Symbol" />
        <input type="text" id="numShares" placeholder="@Resources.Strings.NumShares" />
        <input type="text" id="price" placeholder="@Resources.Strings.BoughtPrice" />
        <a class="addStocks" href="">@Resources.Strings.AddStock</a>
    </form>
</div>

<div class="row">

    <div class="three columns hide-on-phones">

        <!-- Calendar -->

        <section class="row">
            <h4>@Resources.Strings.MyEvents</h4>
            <div class="calendar"></div>
        </section>

        <!-- End Calendar -->

    </div>

<!-- News Feed -->

    <section class="six columns">
        <h2>@Resources.Strings.MyNews</h2>
        <span class="pagelinks">
            <input class="status" type="text" placeholder="@Resources.Strings.PostPlaceholder" /> <a class="post" href="">@Resources.Strings.Post</a>
        </span>
        <h3>@Resources.Strings.NewsBy<span class="ff ff-name">--</span></h3>
        <div class="ff-feed-parent normlinks">
            
            <!-- Template for feed items:
            <article class="ff-feed-item">
                <h6 class="ff-feed-from">Brian Wyant</h6>:
                <p class="ff-feed-story">
                    Lots of text!
                </p>
            </article>
            <!-- End Template -->

        </div>
    </section>

    <!-- End News Feed -->

    <!-- Stock Ticker -->

    <section class="three columns show-on-desktops">
        <h4>@Resources.Strings.MyStocks</h4>
        <div>

            <table id="stocks" class="normlinks">
            <tr>
                <th>@Resources.Strings.StockName</th><th>@Resources.Strings.StockPrice</th><th>@Resources.Strings.StockChange</th>
                <th> </th>
            </tr>
            </table> 
            <span class="pagelinks">
                <a class="addStock" href="#" data-reveal-id="stockModal">@Resources.Strings.AddStock</a>
            </span>
        </div>
    </section>

    <!-- End Stock Ticker -->

</div>

<!-- End Row -->

<div id="fb-root"></div>
<script>
    window.fbAsyncInit = function () {

        // Initialization & Auth Stuff - Common
        FB.init({
            appId: "@ViewBag.AppID",
            status: true,
            cookie: true,
            xfbml: true,
            oauth: true,
            fileUpload: true,
            uploadFile: true
        });
        FB.Event.subscribe('auth.statusChange', function (response) {
            if (!response.authResponse) {
                Debug.log("FB has likely timed us out, log out.");
                FreshFace.logOff();
            }
        });
        $(".logout").click(function (event) {
            FB.logout(function (response) {
                FreshFace.logOff();
            });
            event.preventDefault();
        });
        // Initialization & Auth Stuff

        // Posting Status - /Home/Index Only
        var postStatus = function (msg) {
            $(".status").val("");
            var data = {
                message: msg
            };
            FB.api('/me/feed', 'post', data, function (resp) {
                if (!resp || resp.error) {
                    Debug.log("FB post error.");
                } else {
                    Debug.log("FB responded to status post.");
                    Debug.log(resp);
                    var _index = resp.id.indexOf("_");
                    var postId = resp.id.substr(_index + 1);

                    FB.api('/' + postId, function (postData) {
                        Debug.log("And the data is...");
                        Debug.log(postData);

                        FreshFace.prependPost($(".ff-feed-parent"), postData);
                    });
                }
            });
        }
        $(".post").click(function (event) {
            Debug.log("Posting to FB: " + $(".status").val());
            postStatus($(".status").val());
            event.preventDefault();
        });
        $(".status").keyup(function (event) {
            // On enter key
            if (event.keyCode == 13) {
                postStatus($(this).val());
            }
        });
        // Posting Status

        // Adding Stock - Common Modal
        var addStock = function (event) {
            var name = $("#symbol").val();
            var shares = parseInt($("#numShares").val());
            var price = parseFloat($("#price").val());
            if (name.length >= 3 && name.length <= 6 && typeof (name) == "string" && typeof (shares) == "number" && typeof (price) == "number") {
                FreshFace.addStock(name.toUpperCase(), shares, price);
            } else {
                alert(typeof (name) + typeof (shares) + typeof (price));
            }

            $("#stockModal").trigger("reveal:close");
            event.preventDefault();
        };
        $(".addStocks").click(function (event) {
            addStock(event);
        });
        var onStockKey = function (event) {
            // On enter key
            if (event.keyCode == 13) {
                addStock(event);
            }
        };
        $("#symbol").keyup(onStockKey);
        $("#numShares").keyup(onStockKey);
        $("#price").keyup(onStockKey);
        // Adding Stock

        // Adding Friend - Common Modal
        var fbAddFriend = function (username) {
            FB.ui({ method: 'friends.add', id: username, display: 'popup' });
        }
        var addFriend = function (event) {
            event.preventDefault();
            $("#friendModal").trigger("reveal:close");
            var friend = $("#friend").val();
            fbAddFriend(friend);
        };
        $(".addFriend").click(function (event) {
            addFriend(event);
        });
        var onFriendKey = function (event) {
            // On enter key
            if (event.keyCode == 13) {
                addFriend(event);
            }
        };
        $("#friend").keyup(onFriendKey);
        // Adding Friend

        // Adding Photo - Common Modal
        $(".addPhoto").click(function (event) {
            //var album = $(".photo_album").val();
            var photo = $(".photo_url").val();
            var data = {
                url: photo
            };
            //Debug.log($("#photoForm").serialize());
            FB.api("/me/photos", "post", data, function (resp) {
                Debug.log("Posted photo, resp:");
                Debug.log(resp);

                FB.api('/' + resp.id, function (postData) {
                    Debug.log("And the data is...");
                    Debug.log(postData);

                    FreshFace.prependPost($(".ff-feed-parent"), postData, "photo");

                    $("#photoModal").trigger("reveal:close");
                });
            });
            event.preventDefault();
        });
        // Adding Photo

        // Logic for page - gets Photo, feed, etc
        FB.getLoginStatus(function (logResp) {
            if (logResp.status === 'connected') {
                // Do stuff that we need to be logged in to do
                Debug.log("Logged in!  Can do stuff now.");
                Debug.log(logResp);

                FB.api('/me', function (apiResp) {
                    var uName = apiResp.name;
                    Debug.log("User name: " + uName);
                    Debug.log(apiResp);

                    var fb_url = "https://graph.facebook.com/";
                    fb_url += apiResp.id;
                    var photoUrl = fb_url + "/albums";
                    photoUrl += "?access_token=" + logResp.authResponse.accessToken;
                    photoUrl += "&app_id=" + "@ViewBag.AppID";
                    photoUrl += "&method=post";
                    photoUrl += "&sdk=joey";
                    photoUrl += "&pretty=0";
                    $("#photoForm").attr("action", photoUrl);
                    //$("#photoForm").ajaxForm(function (photoResp) {
                    //    Debug.log(photoResp);
                    //});
                    $(".ff-name").html(uName);
                });
                FB.api('/me/picture', function (apiResp) {
                    Debug.log("Profile pic url: " + apiResp);
                    var img = '<img class="centered" src="' + apiResp + '"></img>';
                    $(".ff-profile-pic").html(img);
                });
                FB.api('/me/home', { limit: 10 }, function (apiResp) {
                    var feedPar = $(".ff-feed-parent");
                    Debug.log("User's feed: " + apiResp);
                    $(apiResp.data).each(function (index, post) {
                        FreshFace.appendPost(feedPar, post);
                    });

                    var checkForNewPosts = function () {
                        Debug.log("Checking for new posts");
                        var oldFirst = $(".ff-feed-item")[0];

                        FB.api('/me/home', { limit: 10 }, function (newPosts) {
                            var postsToAdd = [];

                            $(newPosts.data).each(function (index, newPost) {
                                var newPostId = "fb-item-" + newPost.id;

                                // If we've hit the old first post, we're good
                                if ($(oldFirst).hasClass(newPostId)) {
                                    return false;
                                }

                                // But if this is a duplicate, just ignore it
                                if ($("." + newPostId).length > 0) {
                                    return true;
                                }

                                postsToAdd.push(FreshFace.generatePost(newPost));
                            });

                            for (var i = postsToAdd.length - 1; i >= 0; i--) {
                                $(feedPar).prepend(postsToAdd[i]);
                            }
                        });


                        setTimeout(checkForNewPosts, 5000);
                    };

                    setTimeout(checkForNewPosts, 5000);
                });
            } else {
                Debug.log("Logging out, FB has decided we're done.");
                FreshFace.logOff();
            }
        });
    };
(function(d){
    var js, id = 'facebook-jssdk'; if (d.getElementById(id)) {return;}
    js = d.createElement('script'); js.id = id; js.async = true;
    js.src = "//connect.facebook.net/en_US/all.js";
    d.getElementsByTagName('head')[0].appendChild(js);
}(document));
</script>